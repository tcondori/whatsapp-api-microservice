"""
Diagn√≥stico completo para verificar por qu√© no lleg√≥ el mensaje de WhatsApp
"""
import requests
import json
from datetime import datetime

def check_whatsapp_message_status():
    """Verifica el estado de los mensajes enviados recientemente"""
    print("üîç DIAGN√ìSTICO: ¬øPor qu√© no lleg√≥ el mensaje?")
    print("=" * 60)
    
    # 1. Verificar mensajes en nuestra base de datos
    print("\n1Ô∏è‚É£ VERIFICANDO MENSAJES EN NUESTRA BASE DE DATOS:")
    try:
        response = requests.get(
            "http://localhost:5000/v1/messages",
            headers={"X-API-Key": "dev-api-key"},
            timeout=10
        )
        
        if response.status_code == 200:
            data = response.json()
            messages = data.get('data', {}).get('messages', [])
            
            print(f"‚úÖ Encontrados {len(messages)} mensajes en total")
            
            # Mostrar los √∫ltimos 3 mensajes
            recent_messages = messages[:3]
            for i, msg in enumerate(recent_messages, 1):
                print(f"\nüì® Mensaje {i}:")
                print(f"   ‚Ä¢ ID: {msg.get('id')}")
                print(f"   ‚Ä¢ WhatsApp ID: {msg.get('whatsapp_message_id')}")
                print(f"   ‚Ä¢ Tel√©fono: {msg.get('phone_number')}")
                print(f"   ‚Ä¢ Contenido: {msg.get('content', '')[:50]}...")
                print(f"   ‚Ä¢ Estado: {msg.get('status')}")
                print(f"   ‚Ä¢ Direcci√≥n: {msg.get('direction')}")
                print(f"   ‚Ä¢ Creado: {msg.get('created_at')}")
                
        else:
            print(f"‚ùå Error obteniendo mensajes: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå Error consultando mensajes: {e}")
    
    # 2. Verificar configuraci√≥n actual
    print(f"\n2Ô∏è‚É£ VERIFICANDO CONFIGURACI√ìN ACTUAL:")
    try:
        with open('.env', 'r') as f:
            config_lines = f.readlines()
            
        for line in config_lines:
            line = line.strip()
            if line.startswith('LINE_1_PHONE_NUMBER'):
                print(f"‚úÖ {line}")
            elif line.startswith('WHATSAPP_ACCESS_TOKEN'):
                token = line.split('=', 1)[1] if '=' in line else ''
                print(f"‚úÖ WHATSAPP_ACCESS_TOKEN={'*' * 50}...{token[-10:] if token else 'VAC√çO'}")
            elif line.startswith('WEBHOOK_'):
                print(f"‚úÖ {line}")
                
    except Exception as e:
        print(f"‚ùå Error leyendo configuraci√≥n: {e}")

def test_direct_whatsapp_api():
    """Hace una prueba directa con la API de WhatsApp"""
    print(f"\n3Ô∏è‚É£ PRUEBA DIRECTA CON WHATSAPP API:")
    
    # Cargar configuraci√≥n
    try:
        with open('.env', 'r') as f:
            config = {}
            for line in f:
                line = line.strip()
                if '=' in line and not line.startswith('#'):
                    key, value = line.split('=', 1)
                    config[key] = value
        
        access_token = config.get('WHATSAPP_ACCESS_TOKEN')
        phone_number_id = config.get('LINE_1_PHONE_NUMBER_ID')
        
        if not access_token or not phone_number_id:
            print("‚ùå Faltan tokens de configuraci√≥n")
            return
        
        # Enviar mensaje directo
        url = f"https://graph.facebook.com/v18.0/{phone_number_id}/messages"
        headers = {
            "Authorization": f"Bearer {access_token}",
            "Content-Type": "application/json"
        }
        
        current_time = datetime.now().strftime("%H:%M:%S")
        data = {
            "messaging_product": "whatsapp",
            "to": "59167028778",  # Tu n√∫mero
            "type": "text",
            "text": {
                "body": f"üî• PRUEBA DIRECTA - {current_time} - ¬øLleg√≥ este mensaje?"
            }
        }
        
        print(f"üì§ Enviando mensaje directo a WhatsApp API...")
        print(f"   ‚Ä¢ URL: {url}")
        print(f"   ‚Ä¢ Para: {data['to']}")
        print(f"   ‚Ä¢ Mensaje: {data['text']['body']}")
        
        response = requests.post(url, json=data, headers=headers, timeout=15)
        
        print(f"\nüìä RESPUESTA DE WHATSAPP API:")
        print(f"   ‚Ä¢ Status: {response.status_code}")
        print(f"   ‚Ä¢ Headers: {dict(response.headers)}")
        
        if response.status_code == 200:
            result = response.json()
            print(f"   ‚Ä¢ Respuesta: {json.dumps(result, indent=2)}")
            
            if 'messages' in result and result['messages']:
                whatsapp_id = result['messages'][0]['id']
                print(f"‚úÖ MENSAJE ENVIADO EXITOSAMENTE!")
                print(f"   ‚Ä¢ WhatsApp Message ID: {whatsapp_id}")
                print(f"   ‚Ä¢ ¬øTe lleg√≥ este mensaje directo?")
            else:
                print(f"‚ö†Ô∏è  Respuesta exitosa pero sin mensaje ID")
        else:
            print(f"‚ùå Error en WhatsApp API:")
            print(f"   ‚Ä¢ Respuesta: {response.text}")
            
    except Exception as e:
        print(f"‚ùå Error en prueba directa: {e}")

def check_phone_number_format():
    """Verifica el formato del n√∫mero de tel√©fono"""
    print(f"\n4Ô∏è‚É£ VERIFICANDO FORMATO DE N√öMERO:")
    
    test_number = "59167028778"
    print(f"   ‚Ä¢ N√∫mero usado: {test_number}")
    print(f"   ‚Ä¢ Formato: +{test_number}")
    
    # Validar formato boliviano
    if test_number.startswith('591'):
        if len(test_number) == 11:
            print(f"‚úÖ Formato boliviano v√°lido (591 + 8 d√≠gitos)")
        else:
            print(f"‚ö†Ô∏è  Formato boliviano posiblemente incorrecto (deber√≠a ser 11 d√≠gitos)")
    else:
        print(f"‚ö†Ô∏è  No parece ser n√∫mero boliviano (deber√≠a empezar con 591)")
    
    print(f"   ‚Ä¢ ¬øEl n√∫mero {test_number} est√° registrado en WhatsApp?")
    print(f"   ‚Ä¢ ¬øTiene WhatsApp Business o WhatsApp normal?")

def check_whatsapp_business_requirements():
    """Verifica requisitos de WhatsApp Business API"""
    print(f"\n5Ô∏è‚É£ VERIFICANDO REQUISITOS WHATSAPP BUSINESS:")
    print(f"   ‚Ä¢ ¬øEl n√∫mero destino ({59167028778}) acepta mensajes de empresas?")
    print(f"   ‚Ä¢ ¬øHas tenido conversaci√≥n previa con este n√∫mero desde el WhatsApp Business?")
    print(f"   ‚Ä¢ ¬øEl n√∫mero est√° en la lista de n√∫meros de prueba de Meta?")
    print(f"   ‚Ä¢ ¬øHay restricciones de pa√≠s (Bolivia) en tu cuenta de Meta?")
    
    print(f"\nüìã PASOS PARA RESOLVER:")
    print(f"   1. Verificar que el n√∫mero destino tenga WhatsApp activo")
    print(f"   2. Intentar con un n√∫mero de prueba oficial de Meta")
    print(f"   3. Revisar el estado de tu cuenta en Meta Business")
    print(f"   4. Verificar l√≠mites de env√≠o en tu WhatsApp Business API")

if __name__ == "__main__":
    check_whatsapp_message_status()
    test_direct_whatsapp_api()
    check_phone_number_format()
    check_whatsapp_business_requirements()
    
    print(f"\nüéØ PR√ìXIMOS PASOS:")
    print(f"   1. Revisa si te lleg√≥ el mensaje directo reci√©n enviado")
    print(f"   2. Si no lleg√≥, el problema puede ser:")
    print(f"      ‚Ä¢ N√∫mero no registrado en WhatsApp")
    print(f"      ‚Ä¢ Restricciones de WhatsApp Business API")
    print(f"      ‚Ä¢ Configuraci√≥n de Meta Business")
    print(f"   3. Intenta con otro n√∫mero de prueba")
